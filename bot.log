Task exception was never retrieved
future: <Task finished coro=<run() done, defined at /usr/local/lib/python3.4/dist-packages/websockets/protocol.py:407> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/lib/python3.4/asyncio/tasks.py", line 233, in _step
    result = coro.throw(exc)
  File "/usr/local/lib/python3.4/dist-packages/websockets/protocol.py", line 413, in run
    msg = yield from self.read_message()
  File "/usr/local/lib/python3.4/dist-packages/websockets/protocol.py", line 435, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib/python3.4/dist-packages/websockets/protocol.py", line 490, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib/python3.4/dist-packages/websockets/protocol.py", line 525, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib/python3.4/dist-packages/websockets/framing.py", line 80, in read_frame
    data = yield from reader(2)
  File "/usr/lib/python3.4/asyncio/streams.py", line 478, in readexactly
    block = yield from self.read(n)
  File "/usr/lib/python3.4/asyncio/streams.py", line 449, in read
    yield from self._waiter
  File "/usr/lib/python3.4/asyncio/futures.py", line 388, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.4/asyncio/tasks.py", line 286, in _wakeup
    value = future.result()
  File "/usr/lib/python3.4/asyncio/futures.py", line 277, in result
    raise self._exception
  File "/usr/lib/python3.4/asyncio/selector_events.py", line 825, in _read_ready
    data = self._sock.recv(self.max_size)
  File "/usr/lib/python3.4/ssl.py", line 730, in recv
    return self.read(buflen)
  File "/usr/lib/python3.4/ssl.py", line 619, in read
    v = self._sslobj.read(len or 1024)
ConnectionResetError: [Errno 104] Connection reset by peer
